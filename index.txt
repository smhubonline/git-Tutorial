GITHUB TUTORIAL
Working Phase->Staged Phase->Commit Phase
1. 
git init 
-We can create a repository for blank and existing projects.To create a blank repository, open command line on your desired directory and run the init command.
2.
git add .
-Stages new and modified files, without deleted 
git add -A
-Stages all 
git add -u 
-Stages modified and deleted , without new
-Git add command is a straight forward command. It adds files to the staging area. We can add single or multiple files at once in the staging area.
3.
git commit -m "Commit message"
-This command will not prompt the text editor.It is used to record the changes in the repository. It is the next command after the git add. Every commit contains the index data and the commit message. Every commit forms a parent-child relationship. When we add a file in Git, it will take place in the staging area. A commit command is used to fetch updates from the staging area to the repository. The -m option of commit command lets you to write the commit message on the command line. 
4.
git log
-Git log command is one of the most usual commands of git. It is the most useful command for Git. Every time you need to check the history, you have to use the git log command. The basic git log command will display the most recent commits and the status of the head.
5.
git config --global user.name "suvadip"
git config --global user.email "suvadipmaiti5@gmail.com"
git config --list

git config user.name "smhub"
git config user.email "smhubonline@gmail.com"
git config --list
-Git supports a command called git config that lets you get and set configuration variables that control all facets of how Git looks and operates. It is used to set Git configuration values on a global or local project level.
6.
git remote add origin git@github.com:smhubonline/git-Tutorial.git
-Add git origin. Linked project with github repository.This url remotely add with name origin. 
git remote 
-get remote name (ex- origin)
git remote -v 
-get remote url for push and pull.
7.
git push -u origin main
pushed the local content on the main branch of the remote location.
8.
Create SSH KEY
https://github.com/settings/keys
ssh-keygen -t ed25519 -C "smhubonline@gmail.com"
cat /c/Users/User/.ssh/id_ed25519.pub
This code : ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIM0J6m4mr25vLgCYFwiA8YszCzTIUQjE5w4b5TdyfGbg smhubonline@gmail.com
paste here : https://github.com/settings/ssh/new
Now you can push your code to github. SSH key use to connect with pc to remote github account.
Given permission to access pc data to github.
9.
git diff index.txt
-Git diff is a command-line utility. It's a multiuse Git command. When it is executed, it runs a diff function on Git data sources. These data sources can be files, branches, commits, and more. It is used to show changes between commits, commit, and working tree, etc.

git diff --staged index.txt
-To show any changes in staged phase.
10.
git checkout .
-Remove current changes from all files, return to previous commit.
git checkout -- index.txt
-Remove current changes from index.txt file
git checkout -f 
-Remove current changes from all files, return to previous commit.
11.
ls -la 
-Show all file where changes saved. (.git folder)
12.
git clone git@github.com:smhubonline/git-Tutorial.git
-Clone git repository.In Git, cloning is the act of making a copy of any target repository. The target repository can be remote or local.
git clone -b master git@github.com:smhubonline/git-Tutorial.git
-Clone a specific brance "master"
13. 
touch .gitignore 
-Create blank file.In Git, the term "ignore" is used to specify intentionally untracked files that Git should ignore. It doesn't affect the Files that already tracked by Git.
Sometimes you don't want to send the files to Git service like GitHub. We can specify files in Git to ignore.
git rm --cached .env 
-If .env file previously tracked and want to untracked as you put it in gitignore file later, use this command.
14.
git restore --staged index.txt 
-Unstaged index.txt file if staged before.
15.
config --global alias.st status 
git status -> git st
change short cut command, status to st.
16. 
git log -p 
-show all commit.
q 
-to quit from commit list 
17. 
git checkout -b dev
-Create git branch "dev"
git push origin dev
-Push "dev" branch to remote repository called origin in github.
18. 
git checkout dev 
-Switch branche to "dev"
19. 
git rm -rf .git
-remove git repository
git branch 
-show all branches
20.
Assume you are in master branch.
git merge dev 
-Current branch (master) merge with dev. Check in vs-code which changes you want. 
git status 
-then check git status. If both branch have different files. want to merge in master.
git add . 
git commit 
press Esc and type :wq then  press Enter btn.
Finally check git status. 
git status 
21.
git branch --merged 
-All merged branch list
git branch --no-merged 
-All not merged branch list
git btanch -d dev 
-Delete branch with name "dev". If not merged, it give us error.
git btanch -D dev 
-Delete branch with name "dev". no matter it merged or not.
git btanch -v 
-Show all latest commit of all branches.


